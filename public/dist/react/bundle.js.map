{"version":3,"sources":["webpack:///./public/react/components/emp_spa/info/emp/addEmp.js","webpack:///./public/react/components/emp_spa/info/emp/emp.js","webpack:///./public/react/components/emp_spa/info/emp/getEmp.js","webpack:///./public/react/components/emp_spa/info/info.js","webpack:///./public/react/components/emp_spa/info/student/student.js","webpack:///./public/react/components/emp_spa/login.js","webpack:///./public/react/components/emp_spa/reg.js","webpack:///./public/react/components/todoList/todoList.js","webpack:///./public/react/components/emp_spa/info/emp/list.js","webpack:///./public/react/components/emp_spa/info/emp/pagination.js","webpack:///./public/react/components/todoList/AddTodo.js","webpack:///./public/react/components/todoList/Filter.js","webpack:///./public/react/components/todoList/Node_list.js","webpack:///./public/react/app.js"],"names":["AddEmp","props","Component","Emp","children","GetEmp","state","curPage","eachPage","sumPage","maxPage","listData","getEmpByPage","get","params","then","response","data","setState","count","catch","error","console","log","_id","eval","delById","setCurPage","info","Student","Login","username","password","loginFn","regFn","refs","value","push","Reg","isUse","regSuccess","todoList","content","done","showType","inputMemo","item","filter","addTodo","dataFilter","switchMemo","setShowType","List","map","index","empName","sal","job","delFn","Pagination","arr","i","AddTodo","name","e","preventDefault","Container_count","createClass","getInitialState","age","sayName","plusCount","setCount","num","render","Node_num","getDefaultProps","hobby","Set_count","inputNum","app","Container_todoList","Node_list","FilterWrap","app2","app3","app5"],"mappings":"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","file":"bundle.js","sourcesContent":["import React from \"react\"\r\nimport {hashHistory,Link} from \"react-router\";\r\nimport axios from 'axios';\r\n\r\nexport default class AddEmp extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    };\r\n    render(){\r\n        return(\r\n            <div>\r\n                <span>addEmp模块</span>\r\n            </div>\r\n        )\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./public/react/components/emp_spa/info/emp/addEmp.js","import React from \"react\"\r\nimport {hashHistory,Link} from \"react-router\";\r\nimport axios from 'axios';\r\n\r\nexport default class Emp extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    };\r\n    render(){\r\n        return(\r\n            <div className=\"emp\">\r\n\t\t\t\t<ul className=\"emp-nav\">\r\n\t\t\t\t\t<li><Link to=\"/info/emp/addEmp\">新增员工</Link></li>\r\n\t\t\t\t\t<li><Link to=\"/info/emp/getEmp\">员工列表</Link></li>\r\n\t\t\t\t</ul>\r\n\t\t\t\t<div>{ this.props.children }</div>\r\n\t\t\t</div>\r\n        )\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./public/react/components/emp_spa/info/emp/emp.js","import React from \"react\"\r\nimport {hashHistory,Link} from \"react-router\";\r\nimport axios from 'axios';\r\n\r\nimport List from \"./list.js\";\r\nimport Pagination from \"./pagination.js\";\r\n\r\nexport default class GetEmp extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n\t\t\tcurPage: 1,\r\n\t\t\teachPage: 10,\r\n\t\t\tsumPage: 0,\r\n\t\t\tmaxPage: 0,\r\n\t\t\tlistData: []\r\n\t\t}\r\n    };\r\n    //在render之前执行componentWillMount的内容\r\n    componentWillMount() {\r\n\t\tthis.getEmpByPage()\r\n\t}\r\n\r\n\tgetEmpByPage() {\r\n        axios.get('/emp/getEmpByPage', {\r\n            params: {\r\n              curPage: this.state.curPage,\r\n              eachPage: this.state.eachPage\r\n            }\r\n        })\r\n\t    .then(function (response) {\r\n            return response.data\r\n\t    })\r\n\t    .then((data) => {\r\n            //返回列表数据\r\n            //注意，这里可以将state的键写为和返回的数据data一样，这样直接setState(data)直接解构配对\r\n            this.setState({\r\n                sumPage:data.count,\r\n                curPage:data.curPage,\r\n                eachPage:data.eachPage,\r\n                maxPage:data.maxPage,\r\n                listData:data.data\r\n            })\r\n        })\r\n\t    .catch(function (error) {\r\n\t        console.log(error);\r\n\t    });\r\n\t}\r\n\r\n\tdelById(_id) {\r\n\t\taxios.get('/emp/delById', {\r\n            params: {\r\n              _id:_id\r\n            }\r\n        })\r\n\t    .then(function (response) {\r\n            return response.data\r\n\t    })\r\n\t    .then((data) => {\r\n            //返回是否删除成功\r\n            if(eval(data)){\r\n                getEmpByPage();\r\n            }\r\n        })\r\n\t   .catch(function (error) {\r\n\t        console.log(error);\r\n\t    });\r\n\t}\r\n\r\n\tsetCurPage(curPage) {\r\n\t\tthis.state.curPage = curPage;\r\n\t\tthis.getEmpByPage();\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h1>员工信息列表</h1>\r\n\t\t\t\t<List delFn={(_id) => this.delById(_id) } listData={ this.state.listData } />\r\n\t\t\t\t<Pagination \r\n\t\t\t\tsetCurPage={(curPage) => this.setCurPage(curPage)}\r\n\t\t\t\t{...this.state} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./public/react/components/emp_spa/info/emp/getEmp.js","import React from \"react\"\r\nimport {hashHistory,Link} from \"react-router\";\r\n//使用axios取代ajax（不用引入jquery了,axios较轻量化,基于promise实现）\r\nimport axios from 'axios';\r\n\r\nexport default class info extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    };\r\n    render(){\r\n        //这里是info父组件，使用this.props.children加载子组件以在同一页面显示（this.props.children由主容器中Route父子组件的嵌套关系决定）\r\n        //使用Link组件（由react-router获取），并添加to属性（值为相应的路径），会将组件渲染为a标签，点击后会加载相应的this.props.children\r\n        \t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<ul className = \"infoUl\">\r\n\t\t\t\t\t<li><Link to=\"info/emp\">员工管理</Link></li>\r\n\t\t\t\t\t<li><Link to=\"info/student\">学生管理</Link></li>\r\n\t\t\t\t\t<li><Link to=\"info/teache\">教师管理</Link></li>\r\n\t\t\t\t\t<li><Link to=\"info/system\">系统管理</Link></li>\r\n\t\t\t\t</ul>\r\n\t\t\t\t{ this.props.children }\r\n\t\t\t</div>\r\n\t\t);\r\n    }\r\n    \r\n}\n\n\n// WEBPACK FOOTER //\n// ./public/react/components/emp_spa/info/info.js","import React from \"react\"\r\nimport {hashHistory,Link} from \"react-router\";\r\nimport axios from 'axios';\r\n\r\nexport default class Student extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    };\r\n    render(){\r\n        return(\r\n            <div>\r\n                <span>student模块</span>\r\n            </div>\r\n        )\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./public/react/components/emp_spa/info/student/student.js","import React from \"react\"\r\nimport {\r\n\thashHistory\r\n} from \"react-router\";\r\n//使用axios取代ajax（不用引入jquery了,axios较轻量化，基于promise实现）\r\nimport axios from 'axios';\r\n\r\nexport default class Login extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n\t\t\tusername: \"maxim\",\r\n\t\t\tpassword: \"123456\"\r\n\t\t}\r\n    };\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h4>登录模块</h4>\r\n                <span>（注意输入数据库已有的用户名及密码，或者点击注册进行注册）</span>\r\n                <div>账户：<input type=\"text\" ref=\"username\" defaultValue={this.state.username}/></div>\r\n                <div>密码：<input type=\"text\" ref=\"password\" defaultValue={this.state.password}/></div>\r\n                <div>\r\n                    <input type=\"button\" value=\"登录\" onClick={()=>this.loginFn()}/>\r\n                    {\" \"}{\" \"}\r\n                    <input type=\"button\" value=\"注册\" onClick={()=>this.regFn()}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    loginFn(){\r\n        axios.get('/users/login', {\r\n\t\t\t\tparams: {\r\n                    username :this.refs.username.value,\r\n                    password :this.refs.password.value\r\n                }\r\n\t\t\t})\r\n\t\t\t.then(function(response) {\r\n\t\t\t\treturn response.data;\r\n\t\t\t})\r\n\t\t\t.then((data) => {\r\n                console.log(data)\r\n\t\t\t\tif(data) {\r\n\t\t\t\t\thashHistory.push(\"/info\")\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(function(error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t});\r\n    };\r\n    regFn(){\r\n        hashHistory.push(\"/reg\")\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./public/react/components/emp_spa/login.js","import React from \"react\"\r\nimport {hashHistory} from \"react-router\";\r\nimport axios from 'axios';\r\n\r\nexport default class Reg extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            isUse: false,\r\n            regSuccess: false\r\n        }\r\n    };\r\n    \r\n    render(){\r\n        return(\r\n            <div>\r\n                <h4>注册模块</h4>\r\n                <div>账户：<input type=\"text\" ref=\"username\" placeholder=\"请输入账户检测是否被使用\" onBlur={()=>{this.isUse()}}/>{this.state.isUse ? \"该用户名已被使用\" : \"\"}</div>\r\n                <div>密码：<input type=\"text\" ref=\"password\" placeholder=\"请输入密码\"/>{this.state.regSuccess?\"注册成功\":\"\"}</div>\r\n                <div>\r\n                    <input type=\"button\" value=\"登录\" onClick={()=>this.loginFn()}/>\r\n                    {\" \"}{\" \"}\r\n                    <input type=\"button\" value=\"注册\" onClick={()=>this.regFn()} disabled={this.state.isUse}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    };\r\n    //测试push与path的配合使用，在地址栏中传入账户输入框的值\r\n    loginFn(){\r\n        hashHistory.push(\"/login/\"+this.refs.username.value)\r\n    };\r\n    regFn(){\r\n        axios.get('/users/reg', {\r\n\t\t\t\tparams: {\r\n                    username : this.refs.username.value,\r\n                    password : this.refs.password.value\r\n                }\r\n\t\t\t})\r\n\t\t\t.then(function(response) {\r\n                //此处再将data传送给下一个then\r\n\t\t\t\treturn response.data;\r\n\t\t\t})\r\n\t\t\t.then((data) => {\r\n\t\t\t\tif(data) {\r\n\t\t\t\t\tthis.setState({regSuccess: data})\r\n\t\t\t\t}\r\n\t\t\t})\r\n        //如果出错打印错误信息\r\n\t\t\t.catch(function(error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t});\r\n    };\r\n    isUse(){\r\n        axios.get('/users/isUse', {\r\n\t\t\t\tparams: {\r\n                    username : this.refs.username.value\r\n                }\r\n\t\t\t})\r\n\t\t\t.then(function(response) {\r\n\t\t\t\treturn response.data;\r\n\t\t\t})\r\n\t\t\t.then((data) => {\r\n\t\t\t\tthis.setState({isUse: data})\r\n\t\t\t})\r\n        //如果出错打印错误信息\r\n\t\t\t.catch(function(error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t});\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./public/react/components/emp_spa/reg.js","import React from \"react\"\r\nimport AddTodo from \"./AddTodo.js\"\r\nimport Node_list from \"./Node_list.js\"\r\nimport FilterWrap from \"./Filter.js\"\r\n\r\nexport default class todoList extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        //初始化state，等同于getInitialState方法\r\n        this.state = {\r\n            listData:[{\r\n                content:\"备忘1\",\r\n                done:false\r\n            },{\r\n                content:\"备忘2\",\r\n                done:true\r\n            },{\r\n                content:\"备忘3\",\r\n                done:true\r\n            },{\r\n                content:\"备忘4\",\r\n                done:false\r\n            }],\r\n            showType: \"all\"\r\n        }\r\n    };\r\n    //定义展示组件方法\r\n    \r\n    addTodo(inputMemo){\r\n        //添加备忘条目数据\r\n        this.state.listData.push({\r\n            content:inputMemo,\r\n            done:false\r\n        });\r\n        //setState（即调用render并更新state）\r\n        this.setState(this.state);\r\n    }\r\n    switchMemo(item){\r\n        console.log(item);\r\n        item.done= !item.done;//取反，为true则false，反之亦然\r\n        this.setState(this.state);\r\n    }\r\n    \r\n    setShowType(showType) {\r\n\t\tthis.setState({\r\n\t\t\tshowType\r\n\t\t})\r\n\t}\r\n\tdataFilter() {\r\n\t\tswitch (this.state.showType) {\r\n\t\t\tcase \"all\":\r\n\t\t\t\treturn this.state.listData;\r\n\t\t\tcase \"completed\":\r\n\t\t\t\treturn this.state.listData.filter((item) => item.done)\r\n\t\t\tcase \"active\":\r\n\t\t\t\treturn this.state.listData.filter((item) => !item.done)\r\n\t\t}\r\n\t};\r\n    \r\n    //组织子组件结构（并将数据和方法通过props传递给子组件）\r\n    render(){\r\n        return(\r\n            <div className = {\"wrap\"}>\r\n                <AddTodo addTodo = {(inputMemo)=>this.addTodo(inputMemo)} />\r\n                <Node_list \r\n                    listData = {this.dataFilter()} \r\n                    switchMemo={(item)=>this.switchMemo(item)}\r\n                />\r\n                <FilterWrap \r\n                    showType={ this.state.showType } \r\n                    setShowType={(showType)=>{this.setShowType(showType)}}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./public/react/components/todoList/todoList.js","import React from \"react\"\r\nimport {hashHistory,Link} from \"react-router\";\r\nimport axios from 'axios';\r\n\r\nexport default class List extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    };\r\n    render(){\r\n        return (\r\n\t\t\t<table className=\"empList\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>员工编号</th>\r\n\t\t\t\t\t\t<th>员工姓名</th>\r\n\t\t\t\t\t\t<th>员工薪水</th>\r\n\t\t\t\t\t\t<th>员工岗位</th>\r\n\t\t\t\t\t\t<th>操作</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.props.listData.map((item, index) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<tr key={index}>\r\n\t\t\t\t\t\t\t\t\t<td>{ item._id }</td>\r\n\t\t\t\t\t\t\t\t\t<td>{ item.empName }</td>\r\n\t\t\t\t\t\t\t\t\t<td>{ item.sal }</td>\r\n\t\t\t\t\t\t\t\t\t<td>{ item.job }</td>\r\n\t\t\t\t\t\t\t\t\t<td><input onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tthis.props.delFn(item._id)\r\n\t\t\t\t\t\t\t\t\t}} type=\"button\" value=\"删除\" /></td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./public/react/components/emp_spa/info/emp/list.js","import React from \"react\"\r\nimport {hashHistory,Link} from \"react-router\";\r\nimport axios from 'axios';\r\n\r\nexport default class Pagination extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    };\r\n    render(){\r\n        //统一拿到props上的页码数据\r\n        let {\r\n            curPage,\r\n\t\t\teachPage,\r\n\t\t\tsumPage,\r\n\t\t\tmaxPage,\r\n\t\t\tsetCurPage\r\n\t\t} = this.props\r\n        //依据最后页生成react的option(!)虚拟节点(!注意不是字符串，不是普通的html节点)，push进arr的是react组件对象而非字符串，放在render下会自动解构遍历\r\n\t\tlet arr = [];\r\n\t\tfor(let i = 1; i <= maxPage; i++) {\r\n\t\t\tarr.push(<option value={i}>{i}</option>)\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t当前页: <select ref=\"curPage\" onChange={() => {\r\n\t\t\t\t\t\tsetCurPage(this.refs.curPage.value)\r\n\t\t\t\t\t}} value={curPage}>{arr}</select>\r\n\t\t\t\t\t每页显示条数: <input type=\"text\" />\r\n\t\t\t\t\t总条数: <span>{ sumPage }</span>\r\n\t\t\t\t\t总页数: <span>{ maxPage }</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<input onClick={() => {\r\n\t\t\t\t\t\tsetCurPage(1)\r\n\t\t\t\t\t}} type=\"button\" value='首页' />\r\n\t\t\t\t\t<input onClick={() => {\r\n\t\t\t\t\t\tif(curPage > 1) {\r\n\t\t\t\t\t\t\tsetCurPage(--curPage);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}} type=\"button\" value='上一页' />\r\n\t\t\t\t\t<input onClick={() => {\r\n\t\t\t\t\t\tif(curPage < maxPage) {\r\n\t\t\t\t\t\t\tsetCurPage(++curPage)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}} type=\"button\" value='下一页' />\r\n\t\t\t\t\t<input onClick={() => {\r\n\t\t\t\t\t\tsetCurPage(maxPage)\r\n\t\t\t\t\t}} type=\"button\" value='尾页' />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./public/react/components/emp_spa/info/emp/pagination.js","import React from \"react\"\r\n\r\nexport default class AddTodo extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    };\r\n    \r\n    render(){\r\n        return (\r\n            <div>\r\n                <input ref=\"inputMemo\" type=\"text\"/>\r\n                <input type=\"button\" value=\"add\" onClick={()=>{\r\n                        this.props.addTodo(this.refs.inputMemo.value)\r\n                        this.refs.inputMemo.value=\"\";\r\n                    }}/>\r\n            </div>\r\n        )\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./public/react/components/todoList/AddTodo.js","import React from \"react\"\r\n\r\nexport default class AddTodo extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div>\r\n\t\t\t\t<span>SHOW: </span>\r\n\t\t\t\t{\" \"}\r\n\t\t\t\t{ this.showType(this.props.showType, \"all\") }\r\n\t\t\t\t{\" \"}\r\n\t\t\t\t{ this.showType(this.props.showType, \"completed\") }\r\n\t\t\t\t{\" \"}\r\n\t\t\t\t{ this.showType(this.props.showType, \"active\") }\r\n\t\t\t</div>\r\n        )\r\n    };\r\n    showType(showType, name) {\r\n\t\tif (showType === name) {\r\n\t\t\treturn <span>{ name }</span>\r\n\t\t}\r\n\t\treturn (<a onClick = {\r\n\t\t\t(e) => {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tthis.props.setShowType(name)\r\n                }\r\n            }\r\n\t\thref = \"#\" >{name}</a>)\r\n\t}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./public/react/components/todoList/Filter.js","import React from \"react\"\r\n\r\nexport default class AddTodo extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    };\r\n    \r\n    render(){\r\n            console.log(this.props)\r\n            //注意此处listData是址传递（才能在主容器为Node_list定义的方法中通过栈地址直接更新堆数据），即item是每个条目的对象\r\n        return(\r\n            <ul>\r\n                {\r\n                    this.props.listData.map((item,index)=>{\r\n                        return <li key = {\"No.\"+index} onClick = {()=> this.props.switchMemo(item)} className={item.done ? \"done\" : \"\"}>{item.content}</li>\r\n                    })\r\n                }\r\n            </ul>\r\n        );\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./public/react/components/todoList/Node_list.js","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\"\r\n////组件的生命周期\r\n//var Wrap = React.createClass({\r\n//\tgetDefaultProps() {\r\n//\t\tconsole.log(\"getDefaultProps\")\r\n//\t\treturn {\r\n//\t\t\tmessage: \"hi\",\r\n//\t\t\tname: \"li4\"\r\n//\t\t}\r\n//\t},\r\n//\ttest() {\r\n//\t\tconsole.log(this.props.name)\r\n//\t},\r\n//\trender() {\r\n//\t\treturn (\r\n//\t\t\t<div>\r\n//\t\t\t\t<h1>{ this.props.message + \": \" + this.props.name }</h1>\r\n//\t\t\t\t<input onClick={() => {\r\n//\t\t\t\t\tconsole.log(this)\r\n//\t\t\t\t}} type=\"button\" value=\"点击\" />\r\n//\t\t\t\t{ this.props.children }\r\n//\t\t\t</div>\r\n//\t\t);\r\n//\t}\r\n//})\r\n//\r\n//ReactDOM.render((\r\n//\t<Wrap \r\n//\t\tmessage=\"hello\" \r\n//\t\tname=\"zhangsan\"\r\n//\t\t{ ...user }\r\n//\t\tclickHandle={ clickHandle }>\r\n//\t\t{ test }\r\n//\t</Wrap>\r\n//), app)\r\n\r\n//-------------------------------self-计数----------------------------------\r\n//外层容器(主容器)\r\nvar Container_count = React.createClass({\r\n    getInitialState(){\r\n        return  {\r\n            name : \"maxim\",\r\n            age : 23,\r\n            sayName : function(){\r\n                console.log(this.name)\r\n            },\r\n            count: 0\r\n        }\r\n    },\r\n    //定义各方法，在render时传给各展示组件\r\n    plusCount(){\r\n        this.setState({\r\n            count: ++this.state.count\r\n        })\r\n        console.log(this.state.count)\r\n    },\r\n    setCount(num){\r\n        console.log(num);\r\n        this.setState({\r\n            count: num\r\n        })\r\n    },\r\n    //组织所有子组件结构(将外层容器state与子组件即展示组件props关联)\r\n    render(){\r\n        return (\r\n            <div className={\"wrap\"}>\r\n                <Node_num num={this.state.count} name={this.state.name}/>\r\n                <Set_count \r\n                       plusCount={() => this.plusCount()} \r\n                       setCount={(num) => this.setCount(num)} \r\n                />\r\n            </div>\r\n        )\r\n    }\r\n});\r\n//展示组件\r\nvar Node_num = React.createClass({\r\n    //默认值\r\n    getDefaultProps(){\r\n        return {\r\n            hobby:\"GAMES\"\r\n        }\r\n    },\r\n    render(){\r\n        //定义本子组件结构\r\n        return (\r\n            <div>\r\n                <p>主容器state中name值传递到本容器：<b>{this.props.name}</b></p>\r\n                <p>默认props值hobby：<b>{this.props.hobby}</b></p>\r\n                <h3>计数：{this.props.num}</h3>\r\n            </div>\r\n        );\r\n    }\r\n})\r\nvar Set_count = React.createClass({\r\n    render() {\r\n       return(\r\n           <div>\r\n               <input type=\"text\" ref=\"inputNum\" placeholder=\"重设数字\"/>\r\n               <input type=\"button\" value=\"计数+\" onClick={() => this.props.plusCount()}/>\r\n               <input type=\"button\" value=\"重置/重设\" onClick={() => {\r\n                       console.log(this.refs.inputNum.value)\r\n                        this.props.setCount(~~this.refs.inputNum.value);\r\n                        this.refs.inputNum.value = \"\";\r\n                   }}/>\r\n           </div>\r\n       )\r\n   }\r\n});\r\nReactDOM.render(<Container_count />,app)\r\n\r\n//------------------------self-todoList----------------------------------\r\n\r\n//定义主容器\r\nvar Container_todoList = React.createClass({\r\n    //主要数据\r\n    getInitialState(){\r\n        return {\r\n            listData:[{\r\n                content:\"备忘1\",\r\n                done:false\r\n            },{\r\n                content:\"备忘2\",\r\n                done:true\r\n            },{\r\n                content:\"备忘3\",\r\n                done:true\r\n            },{\r\n                content:\"备忘4\",\r\n                done:false\r\n            }],\r\n            showType: \"all\"\r\n        }\r\n    },\r\n    \r\n    //各子组件方法（在主容器中定义才能操作主容器state及调用setState方法）\r\n    addTodo(inputMemo){\r\n        //添加备忘条目数据\r\n        this.state.listData.push({\r\n            content:inputMemo,\r\n            done:false\r\n        });\r\n        //setState（会调用render并更新state）\r\n        this.setState(this.state);\r\n    },\r\n    switchMemo(item){\r\n        console.log(item);\r\n        item.done= !item.done;//取反，为true则false，反之亦然\r\n        this.setState(this.state);\r\n    },\r\n    \r\n    setShowType(showType) {\r\n\t\tthis.setState({\r\n\t\t\tshowType\r\n\t\t})\r\n\t},\r\n\tdataFilter() {\r\n\t\tswitch (this.state.showType) {\r\n\t\t\tcase \"all\":\r\n\t\t\t\treturn this.state.listData;\r\n\t\t\tcase \"completed\":\r\n\t\t\t\treturn this.state.listData.filter((item) => item.done)\r\n\t\t\tcase \"active\":\r\n\t\t\t\treturn this.state.listData.filter((item) => !item.done)\r\n\t\t}\r\n\t},\r\n    \r\n    //组织子组件结构（并将数据和方法通过props传递给子组件）\r\n    render(){\r\n        return(\r\n            <div className=\"wrap\">\r\n                <AddTodo addTodo = {(inputMemo)=>this.addTodo(inputMemo)} />\r\n                <Node_list \r\n                    listData = {this.dataFilter()} \r\n                    switchMemo={(item)=>this.switchMemo(item)}\r\n                />\r\n                <FilterWrap \r\n                    showType={ this.state.showType } \r\n                    setShowType={(showType)=>{this.setShowType(showType)}}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n})\r\n//子组件（展示组件）\r\nvar AddTodo = React.createClass({\r\n    render(){\r\n        return (\r\n            <div>\r\n                <input ref=\"inputMemo\" type=\"text\"/>\r\n                <input type=\"button\" value=\"add\" onClick={()=>{\r\n                        this.props.addTodo(this.refs.inputMemo.value)\r\n                        this.refs.inputMemo.value=\"\";\r\n                    }}/>\r\n            </div>\r\n        )\r\n    }\r\n})\r\nvar Node_list = React.createClass({\r\n    render(){\r\n            //注意此处listData是址传递（才能在主容器为Node_list定义的方法中通过栈地址直接更新堆数据），item是每个数据条目的对象\r\n        return(\r\n            <ul>\r\n                {\r\n                    this.props.listData.map((item,index)=>{\r\n                        return <li key = {\"No.\"+index} onClick = {()=> this.props.switchMemo(item)} className={item.done ? \"done\" : \"\"}>{item.content}</li>\r\n                    })\r\n                }\r\n            </ul>\r\n        );\r\n    }\r\n})\r\nvar FilterWrap = React.createClass({\r\n    render(){\r\n        return(\r\n            <div>\r\n\t\t\t\t<span>SHOW: </span>\r\n\t\t\t\t{\" \"}\r\n\t\t\t\t{ this.showType(this.props.showType, \"all\") }\r\n\t\t\t\t{\" \"}\r\n\t\t\t\t{ this.showType(this.props.showType, \"completed\") }\r\n\t\t\t\t{\" \"}\r\n\t\t\t\t{ this.showType(this.props.showType, \"active\") }\r\n\t\t\t</div>\r\n        )\r\n    },\r\n    showType(showType, name) {\r\n\t\tif (showType === name) {\r\n\t\t\treturn <span>{ name }</span>\r\n\t\t}\r\n\t\treturn (<a onClick = {\r\n\t\t\t(e) => {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tthis.props.setShowType(name)\r\n                }\r\n            }\r\n\t\thref = \"#\" >{name}</a>)\r\n\t}\r\n})\r\n//输出主容器\r\nReactDOM.render(<Container_todoList />, app2)\r\n\r\n//-------------组件模块化 重构备忘录-------------------------\r\nimport TodoList from \"./components/todoList/todoList.js\"\r\n\r\nReactDOM.render(<TodoList />, app3)\r\n//-------------react-router spa后台管理系统--------------------\r\n//获取react-router\r\nimport { Router, Route, Link, hashHistory, IndexRoute } from 'react-router';\r\n\r\nimport Login from \"./components/emp_spa/login.js\";\r\nimport Reg from \"./components/emp_spa/reg.js\";\r\n\r\nimport Info from \"./components/emp_spa/info/info.js\"\r\nimport Student from \"./components/emp_spa/info/student/student.js\"\r\nimport Emp from \"./components/emp_spa/info/emp/emp.js\"\r\nimport GetEmp from \"./components/emp_spa/info/emp/getEmp.js\"\r\nimport AddEmp from \"./components/emp_spa/info/emp/addEmp.js\"\r\n\r\n//使用react-router提供的组件进行模块化跳转（路由）(实际就是render加载Router和Route等组件)\r\n//Router的history属性指定那种类型的路径，hashHistory则是地址栏锚点\r\n//Route的path属性为路径匹配，component属性为加载的模块\r\n\r\n//定义spa多级模块（树组件等等需要同时显示的），则将父Route和子Route嵌套（父Route写为闭合标签而不是单标签），这样可以在父模块的render中使用this.props.children加载子模块\r\n//注意嵌套的Route子组件的path不要加斜杠，搭配子模块中的Link组件的to属性匹配路径以加载相应的子模块\r\nReactDOM.render((\r\n    <div className={\"wrap\"}>\r\n        <Router history={ hashHistory }>\r\n            <Route path=\"/\" component={ Login } />\r\n            <Route path=\"/login\" component={ Login } />\r\n            <Route path=\"/login/:username\" component={ Login } />\r\n            <Route path=\"/reg\" component={ Reg } />\r\n            <Route path=\"/info\" component={ Info }>\r\n                <Route path=\"emp\" component={ Emp }>\r\n\t\t\t\t    <Route path=\"getEmp\" component={ GetEmp} />\r\n\t\t\t\t    <Route path=\"addEmp\" component={ AddEmp} />\r\n\t\t\t    </Route>\r\n\t\t\t    <Route path=\"student\" component={ Student }>\r\n                    \r\n                </Route>\r\n\t\t    </Route>  \r\n\t    </Router>\r\n    </div>\r\n), app5)\r\n\n\n\n// WEBPACK FOOTER //\n// ./public/react/app.js"],"sourceRoot":""}